name: nodejs-blog-workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
permissions:
  contents: write

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run lint
        run: npm run lint

  cypress:
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run Cypress tests
        run: npm run cypress
        continue-on-error: true
      - name: Upload Cypress results
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results
          path: result.txt
          retention-days: 30

  add_badge_job:
    name: Add Test Badge
    runs-on: ubuntu-latest
    needs: cypress_job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: cypress-results

      - name: Set outcome from test results
        id: set-outcome
        shell: bash
        run: |
          if grep -q "FAIL" result.txt || grep -q "Error" result.txt; then
            echo "::set-output name=cypress_outcome::failure"
          else
            echo "::set-output name=cypress_outcome::success"
          fi

      - name: Add badge to README
        uses: ./.github/actions/add-badge
        with:
          outcome: ${{ steps.set-outcome.outputs.cypress_outcome }}

      - name: Commit and push badge changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update test result badge" || exit 0
          git push

  deploy_job:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: cypress_job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  notification_job:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [linter_job, cypress_job, add_badge_job, deploy_job]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Send notification
        uses: ./.github/actions/send-notification
        with:
          email: ${{ secrets.EMAIL }}
          linter_result: ${{ needs.linter_job.result }}
          cypress_result: ${{ needs.cypress_job.result }}
          add_badge_result: ${{ needs.add_badge_job.result }}
          deploy_result: ${{ needs.deploy_job.result }}


          name: nodejs-blog-workflow
          
  language_metrics:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Show language metrics
        uses: GitHub-Linguist/linguist-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}



# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# permissions:
#   contents: write



#   add_badge:
#     runs-on: ubuntu-latest
#     needs: cypress
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Download Cypress results
#         uses: actions/download-artifact@v4
#         with:
#           name: cypress-results
#       - name: Read outcome
#         id: read_outcome
#         run: |
#           result=$(cat result.txt)
#           if [[ $result == *"All tests passed"* ]]; then
#             echo "outcome=success" >> $GITHUB_OUTPUT
#           else
#             echo "outcome=failure" >> $GITHUB_OUTPUT
#           fi
#       - name: Add badge to README
#         uses: your-username/your-action-repo@v1
#         with:
#           outcome: ${{ steps.read_outcome.outputs.outcome }}
#       - name: Commit and push badge
#         run: |
#           git config user.name "github-actions"
#           git config user.email "actions@github.com"
#           git add README.md
#           git commit -m "Update README with Cypress badge" || echo "No changes to commit"
#           git push

#   deploy:
#     runs-on: ubuntu-latest
#     needs: add_badge
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Deploy to Vercel
#         uses: amondnet/vercel-action@v20
#         with:
#           vercel-token: ${{ secrets.VERCEL_TOKEN }}
#           vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
#           vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

#   notify:
#     runs-on: ubuntu-latest
#     needs: deploy
#     steps:
#       - name: Send notification email
#         uses: dawidd6/action-send-mail@v3
#         with:
#           server_address: smtp.gmail.com
#           server_port: 587
#           username: ${{ secrets.EMAIL_USERNAME }}
#           password: ${{ secrets.EMAIL_PASSWORD }}
#           subject: 'Resultado del workflow ejecutado'
#           body: |
#             S'ha realitzat un push en la branca main que ha provocat l'execució del workflow amb els següents resultats:
#             - linter_job: ${{ needs.linter.outcome }}
#             - cypress_job: ${{ needs.cypress.outcome }}
#             - add_badge_job: ${{ needs.add_badge.outcome }}
#             - deploy_job: ${{ needs.deploy.outcome }}
#           to: ${{ secrets.NOTIFY_EMAIL }}
#           from: ${{ secrets.EMAIL_USERNAME }}

#   language_metrics:
#     runs-on: ubuntu-latest
#     needs: deploy
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Show language metrics
#         uses: GitHub-Linguist/linguist-action@v1
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
# # 
